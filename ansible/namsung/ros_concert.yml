#
# Playbook to install Gopher ROS software.
#
- hosts:
   - concert  # note : this can also be a group

  #strategy: debug
  pre_tasks:
    - name: 'Ensure that we can connect to this host'
      ping:

  roles:
   - role: groot
   - role: asmodehn.supervisor
     tags: concert-supervisor
     become: yes
     supervisor_programs_present:
       ros-concert:
         user: "{{ ros_concert_user }}"
         command: "/usr/local/bin/groot_start_concert --{{ groot_stream|default(stable) }}"
         autostart: true
         stopasgroup: true
         stopwaitsecs: 2
         killasgroup: true
         stdout_logfile: /var/log/supervisor/ros-concert.out.log
         stderr_logfile: /var/log/supervisor/ros-concert.err.log
     when: "'concert' in group_names"

  post_tasks:
    - name: Check if roslaunch is running more than once # we should have only one roslaunch on the concert -> no sim until we get a reliable stop/start process
      shell: sleep 5 && ps aux | grep roslaunch | grep -v grep | wc -l
      ignore_errors: yes
      changed_when: false
      failed_when: "roslaunch_running.stdout != '1'"
      register: roslaunch_running


