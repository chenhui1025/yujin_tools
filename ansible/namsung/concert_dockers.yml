#
# Playbook to install baclony docker, preconfigured for gopher usage.
#
- hosts:
    - concert

  #strategy: debug
  pre_tasks:
   - name: 'Ensure that we can connect to this host'
     ping:

  vars_prompt:
   - name: "docker_hub_login"
     prompt: "Docker Hub Username"
     private: no
     tags: balcony-docker
   - name: "docker_hub_password"
     prompt: "Docker Hub password"
     private: yes
     tags: balcony-docker
   - name: "docker_hub_email"
     prompt: "Docker Hub email"
     private: no
     tags: balcony-docker

  # TODO : get this from a lookup from somewher else
  vars:
    concert_dockers_images:
      - name: yujinrobot/balcony
        tag: latest
    concert_supervisor_present: # This is the config that will allow supervisor to manage the docker container.
      # Ref : https://galaxy.ansible.com/tersmitten/supervisor/
      balcony-docker:
        user: yujin
        command: docker run -i --net=\"host\"  yujinrobot/balcony
        stopasgroup: true
        stopwaitsecs: 2
        killasgroup: true
        autostart: true
        stdout_logfile: "/var/log/supervisor/balcony-docker.out.log"
        stderr_logfile: "/var/log/supervisor/balcony-docker.err.log"
    # important:  here we can add a bunch of other yujin docker images with their configuration
  roles:

   - role: yujin-dockers
     tags: yujin-dockers
     become: yes
     yujin_dockerhub_user: "{{ docker_hub_login }}"
     yujin_dockerhub_password: "{{ docker_hub_password }}"
     yujin_dockerhub_email: "{{ docker_hub_email }}"
     yujin_docker_images: "{{ concert_dockers_images }}"

   - role: geerlingguy.nginx
     become: yes
     nginx_remove_default_vhost: false
     nginx_vhosts:
      - listen: "80 default_server"
        extra_parameters: |
          location /balcony {
            proxy_pass http://127.0.0.1:4000;
          }
          location /rostful {
            proxy_set_header Host $host;
            proxy_pass http://127.0.0.1:8080;

            # this (generic proxy setup)
            #proxy_set_header X-Real-IP  $remote_addr;
            #proxy_set_header X-Forwarded-For $remote_addr;

            # or that (advised for flask)
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header X-Script-Name /rostful;
          }

#     nginx_sites_available:
#     - balcony
#     nginx_sites_enabled:
#     - balcony
#     nginx_sites:
#       concert:
#         - "listen 80"
#         - "server_name concert"
#         # - "location / { return 301 /balcony }"
#         - "location /balcony { proxy_pass http://127.0.0.1:4000; }"
#         - "location /rostful { proxy_pass http://127.0.0.1:8080; }"

   - role: asmodehn.supervisor
     become: yes
     tags: [ yujin-dockers, yujin-dockers-supervisor ]
     supervisor_programs_present: "{{ concert_supervisor_present }}"

  post_tasks:
    - name: "Ensure yujin dockers present"
      become: yes
      tags: [ yujin-dockers, yujin_dockers_restart ]
      supervisorctl:
       name: "{{ item.key }}"
       state: present
      with_dict: "{{ concert_supervisor_present }}"
