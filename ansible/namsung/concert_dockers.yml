#
# Playbook to install baclony docker, preconfigured for gopher usage.
#
- name: ANSIBLE - Concert Dockers installation
  hosts:
    - concert

  #strategy: debug

  vars_prompt:
   - name: "docker_hub_login"
     prompt: "Docker Hub Username"
     private: no
     tags: balcony-docker
   - name: "docker_hub_password"
     prompt: "Docker Hub password"
     private: yes
     tags: balcony-docker
   - name: "docker_hub_email"
     prompt: "Docker Hub email"
     private: no
     tags: balcony-docker

  # TODO : get this from a lookup from somewher else
  vars:
    concert_docker_images:
      - name: yujinrobot/balcony
        tag: latest
        force: yes
        supervisor_program_id: balcony-docker  # needs to match one of the programs_present
    concert_docker_supervisor_programs_present: # This is the config that will allow supervisor to manage the docker container.
      # Ref : https://galaxy.ansible.com/tersmitten/supervisor/
      balcony-docker:
        user: yujin
        command: docker run -i --net=\"host\"  yujinrobot/balcony
        stopasgroup: true
        stopwaitsecs: 2
        killasgroup: true
        autostart: true
        stdout_logfile: "/var/log/supervisor/balcony-docker.out.log"
        stderr_logfile: "/var/log/supervisor/balcony-docker.err.log"
    # important:  here we can add a bunch of other yujin docker images with their configuration

  pre_tasks:
   - name: 'Ensure that we can connect to this host'
     ping:

   - name: 'Ensure we have latest version of index page'
     git:
       repo: git@bitbucket.org:yujinrobot/rocon_static_web.git
       dest: /opt/www/rocon_static_web
       accept_hostkey: yes
     become: yes

   - name: 'Ensure nodejs is installed'
     become: yes
     apt:
       pkg: nodejs
       state: present

   - name: 'Ensure node command is available to use - ubuntu needs a symlink'
     become: yes
     file:
       src: nodejs
       dest: /usr/bin/node
       state: link

   - name: 'Ensure bower is installed'
     become: yes
     npm:
       name: bower
       global: yes
       state: present

   - name: "Ensure bower dependencies are installed"
     become: yes
     bower:
       path: /opt/www/rocon_static_web

  roles:

   - role: yujin-dockers
     tags: yujin-dockers
     become: yes
     yujin_dockerhub_user: "{{ docker_hub_login }}"
     yujin_dockerhub_password: "{{ docker_hub_password }}"
     yujin_dockerhub_email: "{{ docker_hub_email }}"
     yujin_docker_images: "{{ concert_docker_images }}"
     yujin_docker_supervisor_programs: "{{ concert_docker_supervisor_programs_present }}"

   - role: geerlingguy.nginx
     become: yes
     nginx_remove_default_vhost: true
     nginx_vhosts:
      - listen: "80 default_server"
        root: "/opt/www/rocon_static_web"
        extra_parameters: |
          location /balcony {
            proxy_pass http://127.0.0.1:4000;
          }
          location /rostful {
            proxy_set_header Host $host;
            proxy_pass http://127.0.0.1:8080;

            # this (generic proxy setup)
            #proxy_set_header X-Real-IP  $remote_addr;
            #proxy_set_header X-Forwarded-For $remote_addr;

            # or that (advised for flask)
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header X-Script-Name /rostful;
          }

#     nginx_sites_available:
#     - balcony
#     nginx_sites_enabled:
#     - balcony
#     nginx_sites:
#       concert:
#         - "listen 80"
#         - "server_name concert"
#         # - "location / { return 301 /balcony }"
#         - "location /balcony { proxy_pass http://127.0.0.1:4000; }"
#         - "location /rostful { proxy_pass http://127.0.0.1:8080; }"

#   - role: asmodehn.supervisor
#     become: yes
#     tags: [ yujin-dockers, yujin-dockers-supervisor ]
#     yujin_docker_images: "{{ concert_docker_images }}"
#     yujin_docker_supervisor_programs: "{{ concert_docker_supervisor_programs_present }}"

