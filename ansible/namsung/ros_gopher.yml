#
# Playbook to install Gopher ROS software.
#
# TODO : very similar to ros_concert -> we should probably unify them.
# The main risk is to reinstall all robots when reinstalling concert if one doesnt pay attention...
#
- hosts:
   - gocart201
   - gocart202
   - gocart203
   - gocart204

  vars:
    groot_stream: stable
    groot_use_external: yes
    groot_install_rosdeps: yes
    ros_concert_user: yujin

  #strategy: debug
  pre_tasks:
    - name: 'Ensure that we can connect to this host'
      ping:

    # Super basic pre_tasks for now, this can be greatly improved by using ansible role to do the job of groot_binaries script

    # Requirements too high for trusty (pexpect > 3.3)
    #- name: "Calling groot_binaries"
    #  expect:
    #    command: "groot_binaries --{{ groot_distro }} {{ '--external' if groot_use_external else '' }}"
    #    responses:
    #      (?i)password: "{{ groot_password }}"

    - name: "Calling groot_binaries"
      command: "groot_binaries --{{ groot_stream }} {{ '--external' if groot_use_external else '' }}"
      become: yes # we want to always use root here

    - name: "Installing groot_binaries"
      command: "groot_binaries --{{ groot_stream }} --install-rosdeps"
      when: groot_install_rosdeps

  # TODO : use http://docs.ansible.com/ansible/synchronize_module.html
  # TODO : ansible role to replace groot_binaries

  roles:
   - role: yujin

# We probably want to wait before enabling that on the robot
#   - role: asmodehn.supervisor
#     tags: gocart-supervisor
#     supervisor_programs_present:
#       ros-gocart:
#         user: "{{ ros_concert_user }}"
#         command: "/usr/local/bin/groot_start_robot --{{ groot_stream }}"
#         autostart: true
#         stdout_logfile: /var/log/supervisor/ros-gocart.out.log
#         stderr_logfile: /var/log/supervisor/ros-gocart.err.log
#     when: "'gocarts' in groups_names"



